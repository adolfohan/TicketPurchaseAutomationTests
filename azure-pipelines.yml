trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  testProjectPath: 'C:\Projects\Repositories\Git\TestCases\TicketShopTestCases'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- script: |
    dotnet restore

    dotnet build

    dotnet test C:\Projects\Repositories\Git\TestCases\TicketShopTestCases\bin\Debug\net7.0\TicketShopTestCases.dll
  displayName: 'Tests de compra de tickets'

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/TestResults/*.trx'
    searchFolder: '$(Build.SourcesDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'C:\Projects\Repositories\Git\TestCases\TicketShopTestCases\Reports' 
    ArtifactName: 'ExtentReports'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'ExtentReports' # Nombre del artefacto definido en la tarea de publicación de artefactos
    downloadPath: '$(System.ArtifactsDirectory)/ExtentReports' # Ruta donde se descargarán los informes

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
