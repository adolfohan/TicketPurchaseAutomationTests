trigger:
  - pipelineTest

pool:
  vmImage: 'windows-latest'

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: NuGetToolInstaller@1

  - script: dotnet restore
    displayName: 'Restore Dependencies'

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '**/*.sln'
      platform: 'Any CPU'
      configuration: 'Release'

  - task: VSTest@2
    inputs:
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*test*.dll
        !**\*TestAdapter.dll
        !**\obj\**
      searchFolder: '$(System.DefaultWorkingDirectory)'
      codeCoverageEnabled: true
      runInParallel: false

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'NUnit'
      testResultsFiles: '**/TestResults.xml'
      testRunTitle: 'Selenium Tests'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      mergeTestResults: true
      
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.SourcesDirectory)/TicketPurchaseAutomationTest/Reports'
      artifact: 'TestReports'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.SourcesDirectory)/TicketPurchaseAutomationTest/Screenshots'
      artifact: 'Screenshots'    